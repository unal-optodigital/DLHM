/*
 * Copyright 2017 Universidad Nacional de Colombia
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package unal.od.dlhm.sim;

import java.awt.Toolkit;
import java.util.prefs.Preferences;
import unal.od.dlhm.PreferencesKeys;

/**
 *
 * @author: Pablo Piedrahita-Quintero <jppiedrahitaq@unal.edu.co>
 * @author: Carlos Trujillo <catrujila@unal.edu.co>
 * @author: Jorge Garcia-Sucerquia <jisucerquia@unal.edu.co>
 */
public class SimulationSettingsFrame extends javax.swing.JFrame implements PreferencesKeys {

    private static final String TITLE = "Simulation settings";
//    private static final String[] units = new String[]{"Nanometers", "Micrometers", "Millimeters", "Centimeters", "Meters"};
    private static final String[] UNITS_ABVS = new String[]{"nm", "um", "mm", "cm", "m"};

    //units
    private int lambdaIdx;
    private int sourceToSampleIdx;
    private int sourceToScreenIdx;
    private int screenSizeIdx;
    private int sampleSizeIdx;
    
    private final Preferences pref;

    private final SimulationFrame parent;

    /**
     * Creates new form SettingsFrame.
     *
     * @param parent
     */
    public SimulationSettingsFrame(SimulationFrame parent) {
        pref = Preferences.userNodeForPackage(getClass());
        this.parent = parent;

        loadPrefs();

        setLocationRelativeTo(parent);
        initComponents();
    }

    private void loadPrefs() {
        //units
        lambdaIdx = unitToIdx(pref.get(SIM_LAMBDA_UNITS, "nm"));
        sourceToSampleIdx = unitToIdx(pref.get(SIM_SOURCE_TO_SAMPLE_DISTANCE_UNITS, "um"));
        sourceToScreenIdx = unitToIdx(pref.get(SIM_SOURCE_TO_SCREEN_DISTANCE_UNITS, "mm"));
        screenSizeIdx = unitToIdx(pref.get(SIM_SCREEN_SIZE_UNITS, "mm"));
        sampleSizeIdx = unitToIdx(pref.get(SIM_SAMPLE_SIZE_UNITS, "um"));
    }

    private int unitToIdx(String unit) {
        if (unit.equals("nm")) {
            return 0;
        } else if (unit.equals("um")) {
            return 1;
        } else if (unit.equals("mm")) {
            return 2;
        } else if (unit.equals("cm")) {
            return 3;
        } else {
            return 4;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        contrastGroup = new javax.swing.ButtonGroup();
        batchGroup = new javax.swing.ButtonGroup();
        cancelBtn = new javax.swing.JButton();
        okBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        sourceToSampleLabel = new javax.swing.JLabel();
        lambdaLabel = new javax.swing.JLabel();
        lambdaCombo = new javax.swing.JComboBox();
        sourceToSampleCombo = new javax.swing.JComboBox();
        sourceToScreenLabel = new javax.swing.JLabel();
        sourceToScreenCombo = new javax.swing.JComboBox();
        screenSizeCombo = new javax.swing.JComboBox();
        screenSizeLabel = new javax.swing.JLabel();
        sampleSizeLabel = new javax.swing.JLabel();
        sampleSizeCombo = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(TITLE);
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/icon.png")));
        setMinimumSize(new java.awt.Dimension(218, 240));
        setResizable(false);

        cancelBtn.setText("Cancel");
        cancelBtn.setMaximumSize(new java.awt.Dimension(70, 23));
        cancelBtn.setMinimumSize(new java.awt.Dimension(70, 23));
        cancelBtn.setPreferredSize(new java.awt.Dimension(70, 23));
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        okBtn.setText("Ok");
        okBtn.setMaximumSize(new java.awt.Dimension(70, 23));
        okBtn.setMinimumSize(new java.awt.Dimension(70, 23));
        okBtn.setPreferredSize(new java.awt.Dimension(70, 23));
        okBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okBtnActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Units"));
        jPanel2.setToolTipText("");

        sourceToSampleLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        sourceToSampleLabel.setText("So. - Sa. dist.:");
        sourceToSampleLabel.setToolTipText("Source to sample distance.");
        sourceToSampleLabel.setMaximumSize(new java.awt.Dimension(73, 14));
        sourceToSampleLabel.setMinimumSize(new java.awt.Dimension(73, 14));
        sourceToSampleLabel.setPreferredSize(new java.awt.Dimension(73, 14));

        lambdaLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lambdaLabel.setText("Wavelength:");
        lambdaLabel.setMaximumSize(new java.awt.Dimension(73, 14));
        lambdaLabel.setMinimumSize(new java.awt.Dimension(73, 14));
        lambdaLabel.setPreferredSize(new java.awt.Dimension(73, 14));

        lambdaCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Nanometers", "Micrometers", "Millimeters", "Centimeters", "Meters" }));
        lambdaCombo.setSelectedIndex(lambdaIdx);
        lambdaCombo.setMaximumSize(new java.awt.Dimension(83, 20));

        sourceToSampleCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Nanometers", "Micrometers", "Millimeters", "Centimeters", "Meters" }));
        sourceToSampleCombo.setSelectedIndex(sourceToSampleIdx);
        sourceToSampleCombo.setMaximumSize(new java.awt.Dimension(83, 20));

        sourceToScreenLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        sourceToScreenLabel.setText("So. - Sc. dist.:");
        sourceToScreenLabel.setToolTipText("Source to screen distance.");
        sourceToScreenLabel.setMaximumSize(new java.awt.Dimension(73, 14));
        sourceToScreenLabel.setMinimumSize(new java.awt.Dimension(73, 14));
        sourceToScreenLabel.setPreferredSize(new java.awt.Dimension(73, 14));

        sourceToScreenCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Nanometers", "Micrometers", "Millimeters", "Centimeters", "Meters" }));
        sourceToScreenCombo.setSelectedIndex(sourceToScreenIdx);
        sourceToScreenCombo.setMaximumSize(new java.awt.Dimension(83, 20));

        screenSizeCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Nanometers", "Micrometers", "Millimeters", "Centimeters", "Meters" }));
        screenSizeCombo.setSelectedIndex(screenSizeIdx);
        screenSizeCombo.setMaximumSize(new java.awt.Dimension(83, 20));

        screenSizeLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        screenSizeLabel.setText("Screen size:");
        screenSizeLabel.setToolTipText("");
        screenSizeLabel.setMaximumSize(new java.awt.Dimension(73, 14));
        screenSizeLabel.setMinimumSize(new java.awt.Dimension(73, 14));
        screenSizeLabel.setPreferredSize(new java.awt.Dimension(73, 14));

        sampleSizeLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        sampleSizeLabel.setText("Sample size:");
        sampleSizeLabel.setMaximumSize(new java.awt.Dimension(73, 14));
        sampleSizeLabel.setMinimumSize(new java.awt.Dimension(73, 14));
        sampleSizeLabel.setPreferredSize(new java.awt.Dimension(73, 14));

        sampleSizeCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Nanometers", "Micrometers", "Millimeters", "Centimeters", "Meters" }));
        sampleSizeCombo.setSelectedIndex(sampleSizeIdx);
        sampleSizeCombo.setMaximumSize(new java.awt.Dimension(83, 20));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(sourceToScreenLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sourceToScreenCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(sampleSizeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sampleSizeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(screenSizeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(screenSizeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(sourceToSampleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(sourceToSampleCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(lambdaLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(lambdaCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lambdaCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lambdaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sourceToSampleCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sourceToSampleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sourceToScreenCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sourceToScreenLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(screenSizeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(screenSizeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sampleSizeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sampleSizeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(okBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(okBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okBtnActionPerformed
        pref.put(SIM_LAMBDA_UNITS, UNITS_ABVS[lambdaCombo.getSelectedIndex()]);
        pref.put(SIM_SOURCE_TO_SAMPLE_DISTANCE_UNITS, UNITS_ABVS[sourceToSampleCombo.getSelectedIndex()]);
        pref.put(SIM_SOURCE_TO_SCREEN_DISTANCE_UNITS, UNITS_ABVS[sourceToScreenCombo.getSelectedIndex()]);
        pref.put(SIM_SCREEN_SIZE_UNITS, UNITS_ABVS[screenSizeCombo.getSelectedIndex()]);
        pref.put(SIM_SAMPLE_SIZE_UNITS, UNITS_ABVS[sampleSizeCombo.getSelectedIndex()]);

        parent.updateUnitsPrefs();
        
        setVisible(false);
        dispose();
    }//GEN-LAST:event_okBtnActionPerformed

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        setVisible(false);
        dispose();
    }//GEN-LAST:event_cancelBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup batchGroup;
    private javax.swing.JButton cancelBtn;
    private javax.swing.ButtonGroup contrastGroup;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JComboBox lambdaCombo;
    private javax.swing.JLabel lambdaLabel;
    private javax.swing.JButton okBtn;
    private javax.swing.JComboBox sampleSizeCombo;
    private javax.swing.JLabel sampleSizeLabel;
    private javax.swing.JComboBox screenSizeCombo;
    private javax.swing.JLabel screenSizeLabel;
    private javax.swing.JComboBox sourceToSampleCombo;
    private javax.swing.JLabel sourceToSampleLabel;
    private javax.swing.JComboBox sourceToScreenCombo;
    private javax.swing.JLabel sourceToScreenLabel;
    // End of variables declaration//GEN-END:variables
}
